{"version":3,"sources":["Board.js","findWinner.js","useBoard.js","Gomoku.js","App.js","reportWebVitals.js","index.js"],"names":["BoardWrapper","styled","div","BoardRow","Square","Piece","props","color","Board","board","handleClickSquare","map","row","y","col","x","onClick","findWinner","i","j","length","useBoard","status","useState","Array","fill","setBoard","isBlack","setIsBlack","winner","console","log","newBoard","currentY","currentX","updateBoard","handleRestart","window","location","reload","Container","Title","h1","Status","Button","button","Cover","Gomoku","className","isBlackNext","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09c8b0ee.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BoardWrapper = styled.div`\r\n  margin: 20px auto;\r\n`;\r\n\r\nconst BoardRow = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Square = styled.div`\r\n  background: #fdc91f;\r\n  border: 1px solid black;\r\n  width: 25px;\r\n  height: 25px;\r\n`;\r\n\r\nconst Piece = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  background: ${(props) => props.color};\r\n`;\r\n\r\nconst Board = ({ board, handleClickSquare }) => {\r\n  return (\r\n    <BoardWrapper>\r\n      {board.map((row, y) => (\r\n        <BoardRow key={y}>\r\n          {row.map((col, x) => (\r\n            <Square key={x} onClick={handleClickSquare(y, x)}>\r\n              <Piece color={board[y][x]} />\r\n            </Square>\r\n          ))}\r\n        </BoardRow>\r\n      ))}\r\n    </BoardWrapper>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","// function countPiece(board, currentX, currentY, directionX, directionY) {\r\n//   const newBoard = board[currentY][currentX];\r\n//   let tempX = currentX;\r\n//   let tempY = currentY;\r\n//   let total = 0;\r\n\r\n//   while (total < 5) {\r\n//     tempX += directionX;\r\n//     tempY += directionY;\r\n//     // 判斷有否超出棋盤\r\n//     if (tempX < 0 || tempX > 18 || tempY < 0 || tempY > 18) return;\r\n//     if (board[tempY][tempX] === newBoard) {\r\n//       total++;\r\n//     }\r\n//   }\r\n//   return total;\r\n// }\r\n\r\n// const findWinner = (board, x, y) => {\r\n//   if (\r\n//     // 橫排檢查\r\n//     countPiece(board, x, y, 1, 0) + countPiece(board, x, y, -1, 0) >= 4 ||\r\n//     // 直排檢查\r\n//     countPiece(board, x, y, 0, 1) + countPiece(board, x, y, 0, -1) >= 4 ||\r\n//     // 左上到右下檢查\r\n//     countPiece(board, x, y, 1, 1) + countPiece(board, x, y, -1, -1) >= 4 ||\r\n//     // 右上到左下檢查\r\n//     countPiece(board, x, y, 1, -1) + countPiece(board, x, y, -1, 1) >= 4\r\n//   ) {\r\n//     return board[y][x];\r\n//   }\r\n// };\r\n\r\n// export default findWinner;\r\n\r\nconst findWinner = (board) => {\r\n  // 橫排檢查\r\n  for (let i = 0; i < 19; i++) {\r\n    for (let j = 0; j < board.length - 4; j++) {\r\n      if (\r\n        board[i][j] !== null &&\r\n        board[i][j] === board[i][j + 1] &&\r\n        board[i][j + 1] === board[i][j + 2] &&\r\n        board[i][j + 2] === board[i][j + 3] &&\r\n        board[i][j + 3] === board[i][j + 4]\r\n      ) {\r\n        return board[i][j];\r\n      }\r\n    }\r\n  }\r\n\r\n  // 直排檢查\r\n  for (let i = 0; i < board.length - 4; i++) {\r\n    for (let j = 0; j < 19; j++) {\r\n      if (\r\n        board[i][j] !== null &&\r\n        board[i][j] === board[i + 1][j] &&\r\n        board[i + 1][j] === board[i + 2][j] &&\r\n        board[i + 2][j] === board[i + 3][j] &&\r\n        board[i + 3][j] === board[i + 4][j]\r\n      ) {\r\n        return board[i][j];\r\n      }\r\n    }\r\n  }\r\n\r\n  // 左上到右下檢查\r\n  for (let i = 0; i < board.length - 4; i++) {\r\n    for (let j = 0; j < board.length - 4; j++) {\r\n      if (\r\n        board[i][j] !== null &&\r\n        board[i][j] === board[i + 1][j + 1] &&\r\n        board[i + 1][j + 1] === board[i + 2][j + 2] &&\r\n        board[i + 2][j + 2] === board[i + 3][j + 3] &&\r\n        board[i + 3][j + 3] === board[i + 4][j + 4]\r\n      ) {\r\n        return board[i][j];\r\n      }\r\n    }\r\n  }\r\n\r\n  // 右上到左下檢查\r\n  for (let i = 4; i < 19; i++) {\r\n    for (let j = 0; j < 15; j++) {\r\n      if (\r\n        board[i][j] !== null &&\r\n        board[i][j] === board[i - 1][j + 1] &&\r\n        board[i - 1][j + 1] === board[i - 2][j + 2] &&\r\n        board[i - 2][j + 2] === board[i - 3][j + 3] &&\r\n        board[i - 3][j + 3] === board[i - 4][j + 4]\r\n      ) {\r\n        return board[i][j];\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default findWinner;\r\n","import React, { useState } from \"react\";\r\nimport findWinner from \"./findWinner\";\r\n\r\nconst useBoard = () => {\r\n  const [board, setBoard] = useState(Array(19).fill(Array(19).fill(null)));\r\n  const [isBlack, setIsBlack] = useState(true);\r\n  const winner = findWinner(board);\r\n\r\n  let status;\r\n  if (winner) {\r\n    status = `Winner : ${winner}`;\r\n  } else {\r\n    status = `Player : ${isBlack ? \"Black\" : \"White\"}`;\r\n  }\r\n\r\n  const updateBoard = (y, x, newBoard) => {\r\n    setBoard(\r\n      board.map((row, currentY) => {\r\n        if (currentY !== y) return row;\r\n        return row.map((col, currentX) => {\r\n          if (currentX !== x) return col;\r\n          return newBoard;\r\n        });\r\n      })\r\n    );\r\n  };\r\n  const handleClickSquare = (y, x) => {\r\n    return () => {\r\n      console.log(board[y][x]);\r\n      if (findWinner(board) || board[y][x]) return;\r\n      updateBoard(y, x, isBlack ? \"Black\" : \"White\");\r\n      setIsBlack(!isBlack);\r\n    };\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    window.location.reload();\r\n  };\r\n  return {\r\n    status,\r\n    winner,\r\n    board,\r\n    isBlack,\r\n    handleClickSquare,\r\n    handleRestart,\r\n  };\r\n};\r\n\r\nexport default useBoard;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Board from \"./Board\";\r\nimport useBoard from \"./useBoard\";\r\n\r\nconst Container = styled.div`\r\n  margin: auto;\r\n  width: 500px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: black;\r\n  text-align: center;\r\n  margin-top: 32px;\r\n  font-weight: bold;\r\n`;\r\nconst Status = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n\r\n  & div {\r\n    margin-right: 10px;\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 100px;\r\n  background-color: #003c9d;\r\n  color: #fff;\r\n  border-radius: 15px;\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &:hover {\r\n    color: #003c9d;\r\n    background-color: #fff;\r\n    border: 2px #003c9d solid;\r\n  }\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  margin: auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n\r\n  .content {\r\n    font-size: 32px;\r\n    color: white;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n      transform: scale(1.1);\r\n      transition: transform 0.2s;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Gomoku = () => {\r\n  const {\r\n    status,\r\n    winner,\r\n    board,\r\n    isBlack,\r\n    handleClickSquare,\r\n    handleRestart,\r\n  } = useBoard();\r\n  return (\r\n    <Container>\r\n      <Title>GomokoGame 五子棋</Title>\r\n      {winner ? (\r\n        <Cover>\r\n          <div className=\"content\">\r\n            <div>{status}!!!</div>\r\n            <Button onClick={handleRestart}>再玩一次</Button>\r\n          </div>\r\n        </Cover>\r\n      ) : (\r\n        <Status>\r\n          <div>{status}</div>\r\n          <Button onClick={handleRestart}>重新開始</Button>\r\n        </Status>\r\n      )}\r\n      <Board\r\n        board={board}\r\n        isBlackNext={isBlack}\r\n        handleClickSquare={handleClickSquare}\r\n      />\r\n      {/* <Button onClick={handleRestart}>重新開始</Button> */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Gomoku;\r\n","import Gomoku from \"./Gomoku\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Gomoku />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}